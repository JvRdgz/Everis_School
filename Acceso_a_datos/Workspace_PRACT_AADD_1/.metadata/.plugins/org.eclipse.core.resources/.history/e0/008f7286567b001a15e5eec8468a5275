package base_de_datos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class ConexionDAO {

	static Connection conexion;
	static String bd = "test";
	static String user = "root";
	static String password = "";
	static String host = "localhost"; // LOCALHOST
	static String port = "3306:";
	static String url = "jdbc:mysql://";
	
	public static Connection getConexion() {
		if (conexion == null)
			crearConexion();
		return conexion;
	}
	
	// DEVUELVE true SI SE HA CREADO CORRECTAMENTE
	public static boolean crearConexion() {
		try {
			// CARGO EL DRIVER
			Class.forName("com.mysql.jdbc.Driver");
			// GUARDA LA CONEXION EN EL OBJETO
			conexion = DriverManager.getConnection((url + host + "/" + bd), user, password);
			// ESTO ES RECOMENDABLE POR SI SE DA EL CASO DE QUE SE DE UN ERROR DE CUALQUIER TIPO
			// Y LA BASE DE DATOS NO LO DETECTE Y FINALMENTE SE DE ACABO. PARA EVITAR ESTO, 
			// PONEMOS EL setAutoCommit A false.
			// DESPUES DE CADA OPERACION, DEBEMOS DE FORZAR UN COMMIT PARA ESTABLECER LOS CAMBIOS,
			// SIEMPRE Y CUANDO LO DEJEMOS ASI, SINO, HACIENDO UN setAutoCommit(true) LO HACE 
			// AUTOMATICAMENTE AUNQUE REPITO, NO ES RECOMENDABLE.
			conexion.setAutoCommit(false);
		} catch (ClassNotFoundException e) {
			System.err.println(e);
			return false;
		} catch (SQLException e) {
			System.err.println(e);
			return false;
		}
		return true;
	}
	
	public static void desconectar() {
		try {
			conexion.close();
			conexion = null;
			System.out.println("\n\tConexion con la base de datos " + bd + " terminada.");
		} catch (SQLException e) {
			System.err.println("\n\tError al cerrar la conexion con la base de datos + " + bd + ".");
			System.err.print(e);
		}
	}
	
	public static void main(String[] args) {
		Connection c = ConexionDAO.getConexion();
		System.out.println(c);
	}
}
