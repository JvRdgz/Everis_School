package main;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

import hilos.Hilo;

public class Main {

	static Scanner sc = new Scanner(System.in);
	static String ruta = ".\\";
	static File directorio = new File(ruta);

	public static void crear_ficheros() {
		Hilo arrayHilos[] = new Hilo[3];
		if (!directorio.exists())
			directorio.mkdir();
//		File f1 = new File(ruta + "\\Fichero1.txt");
//		File f2 = new File(ruta + "\\Fichero2.txt");
//		File f3 = new File(ruta + "\\Fichero3.txt");

		/*
		 * if (!f1.exists() && !f2.exists() && !f3.exists()) { try { f1.createNewFile();
		 * f2.createNewFile(); f3.createNewFile(); } catch (IOException e) {
		 * System.err.println("\nERROR AL CREAR EL ARCHIVO."); e.printStackTrace(); } }
		 */

//		File f;
//		Hilo h;

		Thread thread;
		for (int i = 0; i < arrayHilos.length; i++) {
//			arrayHilos[i] = new Hilo((f = new File(ruta + "\\Fichero" + i + ".txt")), (thread.setName("hilo_" + i)), i);
			arrayHilos[i] = new Hilo();
			thread = new Thread(arrayHilos[i]);
			thread.setName("Hilo_" + (i + 1));
			if (i == 0) {
				thread.setPriority(Thread.MAX_PRIORITY);
			} else if (i == 1) {
				thread.setPriority(Thread.NORM_PRIORITY);
			} else {
				thread.setPriority(Thread.MIN_PRIORITY);

			}
			thread.start();
			/*
			 * try { thread.wait(); } catch (InterruptedException e) {
			 * System.err.println("Error en la sincronizacion de hilos.");
			 * e.printStackTrace(); }
			 */
		}
		/*
		 * for (int i = 0; i < 3; i++) { h = new Hilo((f = new File(ruta + "\\Fichero" +
		 * i + ".txt")), thread.setName("Hilo_" + i),
		 * thread.setPriority(Thread.MAX_PRIORITY)); }
		 */
		/*
		 * Hilo h1 = new Hilo(f1, "Hilo_1", "Maxima_prioridad"); Hilo h2 = new Hilo(f2,
		 * "Hilo_2", "Prioridad_normal"); Hilo h3 = new Hilo(f3, "Hilo_3",
		 * "Minima_prioridad");
		 * 
		 * Thread thread1 = new Thread(h1); Thread thread2 = new Thread(h2); Thread
		 * thread3 = new Thread(h3);
		 */
		/*
		 * thread1.setName("Hilo_1"); thread1.start(); thread2.start(); thread3.start();
		 */
	}

	public static void main(String[] args) {
		crear_ficheros();
		menuPrincipal();
	}

	private static void menuPrincipal() {
		int op = 0;
		String exit = "";

		System.out.println("\n\t\tMENU PRINCIPAL PRACTICA 1 PSSPP\n\n");

		do {

			System.out.println("\t1.- Demonio que cuenta lineas.");
			System.out.println("\t2.- Demonio control de inserciones.");
			System.out.println("\t3.- Operaciones sincronizadas.");
			System.out.println("\t0.- Salir.");

			op = Integer.parseInt(sc.nextLine());

			while (op < 0 || op > 3) {
				System.out.println("Opcion no valida, Introduce una opcion entre 0 y 3: ");
				op = Integer.parseInt(sc.nextLine());
			}

			switch (op) {
			case 1:
				opcion_1();
				break;
			case 2:
				opcion_2();
				break;
			case 3:
				opcion_3();
				break;
			case 0:
				do {
					System.out.println("¿Seguro que quieres salir? (S para si \\ N para no)");
					exit = sc.nextLine();
				} while (!exit.equalsIgnoreCase("S") && !exit.equalsIgnoreCase("N"));
				break;
			}

		} while (op != 0 || exit.equalsIgnoreCase("N"));
	}

	private static void opcion_1() {
		// TODO Auto-generated method stub

	}

	private static void opcion_2() {
		// TODO Auto-generated method stub

	}

	private static void opcion_3() {
		// TODO Auto-generated method stub

	}
}
